"""

Revision ID: 0d42db74fb8b
Revises: 9953b02c6bd4
Create Date: 2025-05-29 07:56:36.920631+03:00

"""

from typing import Sequence, Union

from alembic import op


# revision identifiers, used by Alembic.
revision: str = "0d42db74fb8b"
down_revision: Union[str, None] = "9953b02c6bd4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "plagiarism_matches_source_chunk_id_fkey",
        "plagiarism_matches",
        type_="foreignkey",
    )
    op.drop_constraint(
        "plagiarism_matches_matched_chunk_id_fkey",
        "plagiarism_matches",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "plagiarism_matches",
        "document_chunks",
        ["source_chunk_id"],
        ["id"],
        ondelete="cascade",
    )
    op.create_foreign_key(
        None,
        "plagiarism_matches",
        "document_chunks",
        ["matched_chunk_id"],
        ["id"],
        ondelete="cascade",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "plagiarism_matches", type_="foreignkey")
    op.drop_constraint(None, "plagiarism_matches", type_="foreignkey")
    op.create_foreign_key(
        "plagiarism_matches_matched_chunk_id_fkey",
        "plagiarism_matches",
        "document_chunks",
        ["matched_chunk_id"],
        ["id"],
    )
    op.create_foreign_key(
        "plagiarism_matches_source_chunk_id_fkey",
        "plagiarism_matches",
        "document_chunks",
        ["source_chunk_id"],
        ["id"],
    )
    # ### end Alembic commands ###
